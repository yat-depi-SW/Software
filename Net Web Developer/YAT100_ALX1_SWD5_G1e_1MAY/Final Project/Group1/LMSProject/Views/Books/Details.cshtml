@model LMSProjectAUTH.Application.ViewModel.Book.BookDetialsVM

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<hr/>
<div class="container">
    <div class="row">
        <!-- Column for book details -->
        <div class="col-md-8">
            <dl class="row">
                <dt hidden class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Id)
                </dt>
                <dd hidden class="col-sm-10">
                    @Html.DisplayFor(model => model.Id)
                </dd>

                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.Title)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.Title)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.BookPrice)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.BookPrice)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.PenalityPercentage)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.PenalityPercentage)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.GenreType)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.GenreType)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.AuthorName)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.AuthorName)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.NoOfCopies)
                </dt>
                <dd class="col-sm-8">
                    <div>
                        @Html.DisplayFor(model => model.NoOfCopies)
                    </div>

                    <div style="display: flex; gap: 10px; margin-top: 10px;">
                        <!-- Badge for UnBorrowedBooks (Succeed) -->
                        <span class="badge bg-dark" style="display: inline-block; width: 150px; height: 30px; line-height: 30px; text-align: center; font-size: 12px; padding: 0;">
                            UnBorrowed Books: @ViewBag.UnBorrowedBooks
                        </span>

                        <!-- Badge for BorrowedBooks (Info) -->
                        <span class="badge bg-danger" style="display: inline-block; width: 150px; height: 30px; line-height: 30px; text-align: center; font-size: 12px; padding: 0;">
                            Borrowed Books: @ViewBag.BorrowedBooks
                        </span>
                    </div>
                </dd>
            </dl>
        </div>

        <!-- Column for book photo with fixed width -->
        <div class="col-md-4 d-flex justify-content-center align-items-start">
            <div>
                <dt>
                    @Html.DisplayNameFor(model => model.BookPhoto)
                </dt>
                <dd>
                    @if (Model.BookPhoto != null)
                    {
                        string imageBase64 = Convert.ToBase64String(Model.BookPhoto);
                        string imageSrc = $"data:image/png;base64,{imageBase64}"; // Adjust image type as needed

                        <img src="@imageSrc" alt="Book Photo" class="img-fluid" style="width: 180px; height: auto;" />
                    }
                    else
                    {
                        <p>N/A</p>
                    }
                </dd>
            </div>
        </div>
    </div>
</div>


    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-dark">Edit</a>
    <a asp-action="Index"  class="btn btn-dark">Cancel</a>
</div>
