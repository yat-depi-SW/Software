---
- name: Get latest kubectl version
  uri:
    url: https://dl.k8s.io/release/stable.txt
    return_content: yes
  register: version

- name: create kubectl versioned directory
  file:
    path: /opt/kubectl-{{ version.content }}
    state: directory

- name: Download the latest kubectl release
  uri:
    url: https://dl.k8s.io/release/{{ version.content }}/bin/linux/amd64/kubectl
    dest: /opt/kubectl-{{ version.content }}
  register: kubectl

- name: Download the kubectl checksum
  uri:
    url: https://dl.k8s.io/release/{{ version.content }}/bin/linux/amd64/kubectl.sha256
    dest: /opt/kubectl-{{ version.content }}
  register: kubectl

- name: Get kubectl sha256sum
  shell: sha256sum /opt/kubectl-{{ version.content }}/kubectl | cut -d " " -f1
  register: file_shasum

- set_fact:
    shasum1={{ file_shasum.stdout }}

- debug: var=shasum1
  run_once: true

- name: get sha256sum value from file
  command: cat /opt/kubectl-{{ version.content }}/kubectl.sha256
  register: downloaded_shasum

- set_fact:
    shasum2={{ downloaded_shasum.stdout }}

- debug: var=shasum2
  run_once: true

- name: Assert that the kubectl binary is OK
  assert:
    that:
      - file_shasum.stdout == downloaded_shasum.stdout
    fail_msg: "Shasum does not correspond"
    success_msg: "kubectl shasum verified: ok"

- name: Change kubectl file permission
  file:
    path: "/opt/kubectl-{{ version.content }}/kubectl"
    mode: '0755'

- name: create a symlink to kubectl
  file:
    src: "/opt/kubectl-{{ version.content }}/kubectl"
    dest: "/usr/bin/kubectl"
    state: link
